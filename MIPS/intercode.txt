int s(int x){
	int y = x + 1;
	int z = x - 1;
	return y*z;
}


void main()
{
	int a = read();
	int c = s(s(a));
	print(c);
}function_definition
1  type_specifier  int
1  IDENTIFIER  s
sub0
parameter_declaration
1  type_specifier  int
1  IDENTIFIER  x
sub1
declaration
sub0
type_specifier
2  type_specifier  int
sub1
init_declarator_list
sub0
direct_declarator
2  IDENTIFIER  y
sub0
initializer_expression
sub0
direct_declarator
2  IDENTIFIER  y
sub1
assignment_operator
2  assignment_operator  =
sub2
additive_expression
sub0
primary_expression
2  IDENTIFIER  x
sub1
unary_operator
2  unary_operator  +
sub2
primary_expression
2  CONSTANT  1
declaration
sub0
type_specifier
3  type_specifier  int
sub1
init_declarator_list
sub0
direct_declarator
3  IDENTIFIER  z
sub0
initializer_expression
sub0
direct_declarator
3  IDENTIFIER  z
sub1
assignment_operator
3  assignment_operator  =
sub2
additive_expression
sub0
primary_expression
3  IDENTIFIER  x
sub1
unary_operator
3  unary_operator  -
sub2
primary_expression
3  CONSTANT  1
return_statement
4  reserved_keywords  return
sub0
multiplicative_expression
sub0
primary_expression
4  IDENTIFIER  y
sub1
unary_operator
4  unary_operator  *
sub2
primary_expression
4  IDENTIFIER  z
function_definition
8  type_specifier  void
8  IDENTIFIER  main
sub0
declaration
sub0
type_specifier
10  type_specifier  int
sub1
init_declarator_list
sub0
direct_declarator
10  IDENTIFIER  a
sub0
initializer_expression
sub0
direct_declarator
10  IDENTIFIER  a
sub1
assignment_operator
10  assignment_operator  =
sub2
function_call
sub0
primary_expression
10  IDENTIFIER  read
declaration
sub0
type_specifier
11  type_specifier  int
sub1
init_declarator_list
sub0
direct_declarator
11  IDENTIFIER  c
sub0
initializer_expression
sub0
direct_declarator
11  IDENTIFIER  c
sub1
assignment_operator
11  assignment_operator  =
sub2
function_call
sub0
primary_expression
11  IDENTIFIER  s
sub1
function_call
sub0
primary_expression
11  IDENTIFIER  s
sub1
primary_expression
11  IDENTIFIER  a
function_call
sub0
primary_expression
12  IDENTIFIER  print
sub1
primary_expression
12  IDENTIFIER  c



中间树
FUNCTION s :
PARAM var0
Temp0 = #1
Temp1 = var0 + Temp0
var1 = Temp1
Temp0 = #1
Temp1 = var0 - Temp0
var2 = Temp1
Temp0 = var1 * var2
RETURN Temp0
FUNCTION main :
Temp0 = CALL read
var0 = Temp0
ARG var0
ARG 
CALL s
Temp0 = CALL s
var1 = Temp0
ARG var1
CALL print




--------------函数表----------------
int  s  int  x  
void  main  
